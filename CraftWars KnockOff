
--//Locals\\

getgenv().Pickaxe = nil
getgenv().Location = nil
getgenv().TweenTp = nil -- Sem Teleport (Mais Seguro Acho)
getgenv().RangeMine = 10 -- Range De Minerar 10 Ã© o maximo
getgenv().NpcFarmDis = 4
getgenv().OreSelect = "nil" -- Em Breve (Talvez)
getgenv().NpcFarm = false
getgenv().NpcFarmDungeon = false
getgenv().MineFarming = false

getgenv().SecureMode = true

getgenv().Anti = true -- Re-Execute if you change it


--//Player\\


--//Library\\
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()




local Window = Rayfield:CreateWindow({
Name = "CraftWars KnockOff Gui",
LoadingTitle = "CraftWars KnockOff Gui",
LoadingSubtitle = "by External",
ConfigurationSaving = {
	Enabled = true,
	FileName = "External Gui",
},
KeySystem = false, -- Set this to true to use our key system
KeySettings = {
	Title = "Sirius Hub",
	Subtitle = "Key System",
	Note = "Join the discord (discord.gg/sirius)",
	Key = "ABCDEF"
}
})


local Tab = Window:CreateTab("Auto Farm")
local Tab2 = Window:CreateTab("Local Player")


local Section = Tab:CreateSection("Auto Mine")
local Section2 = Tab2:CreateSection("Player")

--//Functions\\

local function GetNpc()
   currentNpc = nil

   pcall(function()
   
      local NPCFolder = workspace.Global.NPCs
   
   for k, v in next, NPCFolder:GetChildren() do
      if v.Parent ~= nil and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid").Health > 0 then
        
        currentNpc = v
        
       
       
   end
   
  end
 end)
 
 return currentNpc

end


local function GetNpcDungeon()
   currentNpc = nil

   pcall(function()
   
   local NPCFolder = workspace.Global["NPCs Dungeon"]
   
   for k, v in next, NPCFolder:GetChildren() do
      if v.Parent ~= nil and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid").Health > 0 then
        
        currentNpc = v
        
       
       
   end
   
  end
 end)
 
 return currentNpc

end


--//Auto Mine\\


local Input = Tab:CreateInput({
	Name = "Pickaxe",
	PlaceholderText = "Pickaxe Name",
	RemoveTextAfterFocusLost = false,
	Callback = function(Text)
	    getgenv().Pickaxe = Text
		print(Text)
	end,
})


local Dropdown = Tab:CreateDropdown({
	Name = "Mines",
	Options = {"Normal Mine","Advanced Mine"},
	CurrentOption = "Option 1",
	Flag = "MinesDropDown", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Option)
	print(Option)
    if Option == "Normal Mine" then
       getgenv().Location = "OreMines"
    end
    if Option == "Advanced Mine" then
       getgenv().Location = "OreMines2"
    end
    
	end,
})

local Toggle = Tab:CreateToggle({
	Name = "TweenTp",
	CurrentValue = false,
	Flag = "TweenTpToggle", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		getgenv().TweenTp = Value
		print(Value)
	end,
})



local Button = Tab:CreateButton({
	Name = "Start Auto Mine",
	Callback = function()

    print("Clicked")
    



local Char = game.Players.LocalPlayer.Character
local CanHit = true
local Humanoid = Char:WaitForChild("Humanoid")

local plr = game:service"Players".LocalPlayer;
local tween_s = game:service"TweenService";
local info = TweenInfo.new(1,Enum.EasingStyle.Quad);
function tp(...)
   local tic_k = tick();
   local params = {...};
   local cframe = ...;
   local tween,err = pcall(function()
       local tween = tween_s:Create(plr.Character["HumanoidRootPart"],info,{CFrame=cframe});
       tween:Play();

   end)
   if not tween then return warn("Error") end
end

function Hit(who)
   pcall(function()
    local args = {
    [1] = "hit",
    [2] = {
      ["char"] = game:GetService("Players").LocalPlayer.Character,
      ["soundid"] = "rbxassetid://0",
      ["target"] = who
    }
  }

   game:GetService("Players").LocalPlayer.Character:FindFirstChild(getgenv().Pickaxe).Use:InvokeServer(unpack(args))   
end) 
end

local function GetOre()
   currentOre = nil
pcall(function()
   
   for k, v in next, workspace.Global[getgenv().Location]:GetChildren() do
      if (v:FindFirstChild('Head')) then
         currentOre = v.Head
     end 
   end
end)

return currentOre
    
   
end


warn("Auto Mine Started")



coroutine.resume(coroutine.create(function()
while (task.wait(.5)) do

game.Workspace.Global.Warps.MinesReturn.Teleporter.CanTouch = false
game.Workspace.Global.Warps.Mines2Return.Teleporter.CanTouch = false
game.Workspace.Global.Warps.Mines3Return.Teleporter.CanTouch = false
game.Workspace.Global.Warps.Mines4Return.Teleporter.CanTouch = false
MineFarming = true

if Humanoid.Health < 1 then
MineFarming = false
   Char.Torso.Anchored = false
   game.Workspace.Global.Warps.MinesReturn.Teleporter.CanTouch = true
   game.Workspace.Global.Warps.Mines2Return.Teleporter.CanTouch = true
   game.Workspace.Global.Warps.Mines3Return.Teleporter.CanTouch = true
   game.Workspace.Global.Warps.Mines4Return.Teleporter.CanTouch = true
   break
end

pcall(function()

    local Ore = GetOre()
    Ore.CanCollide = false

    if getgenv().TweenTp == false then
    Char.PrimaryPart.CFrame = Ore.CFrame * CFrame.new(0,1,0)
    end
    if getgenv().TweenTp == true then
    tp(Ore.CFrame * CFrame.new(0,1,0))
    end
   


    
   task.wait(.2)
end)
end
end))

--//Hit\\

coroutine.resume(coroutine.create(function()

while(task.wait(.5)) do


 if Humanoid.Health < 1 then
   break
 end
 
 for _,v in pairs(game.Workspace.Global[Location]:GetChildren()) do
     if v:FindFirstChild("Head") and v.Head:FindFirstChild("Ore") then
          range = (Char.HumanoidRootPart.CFrame.Position - v.Head.CFrame.Position).Magnitude
          if range < getgenv().RangeMine then
          Hit(v)
          end
    end
end

end
end))


--
end,
})


--//Npc AutoFarm\\

local Section3 = Tab:CreateSection("Auto Farm Npc")

local Slider = Tab:CreateSlider({
	Name = "Distance",
	Range = {0, 40},
	Increment = 1,
	Suffix = "Distance",
	CurrentValue = 4,
	--Flag = "JumpPowerSlider", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	pcall(function()
        getgenv().NpcFarmDis = Value
	end)
	end,
})

local Toggle = Tab:CreateToggle({
	Name = "Auto Farm Npc",
	CurrentValue = false,
	Flag = "AutoFarmNpcToogle", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		getgenv().NpcFarm = Value
		print(Value)
	end,
})


coroutine.resume(coroutine.create(function()
 while true do task.wait()
if getgenv().NpcFarm == false and MineFarming == false then
pcall(function()
   GetNpc().HumanoidRootPart.Anchored = false
  end)
end
   
if getgenv().NpcFarm == true then
pcall(function()
local Char = game.Players.LocalPlayer.Character
 GetNpc().HumanoidRootPart.Anchored = true
  GetNpc().HumanoidRootPart.CFrame = Char.HumanoidRootPart.CFrame * CFrame.new(0,0,-getgenv().NpcFarmDis)
 end)  
 end
end
   

end))


local Toggle = Tab:CreateToggle({
	Name = "Auto Farm Dungeon Npc",
	CurrentValue = false,
	Flag = "AutoFarmNpcDungeonToogle", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		getgenv().NpcFarmDungeon = Value
		print(Value)
	end,
})


coroutine.resume(coroutine.create(function()
 while true do task.wait()
if getgenv().NpcFarmDungeon == false and MineFarming == false then
pcall(function()
   GetNpcDungeon().HumanoidRootPart.Anchored = false
  end)
end
   
if getgenv().NpcFarmDungeon == true then
pcall(function()
local Char = game.Players.LocalPlayer.Character
 GetNpcDungeon().HumanoidRootPart.Anchored = true
  GetNpcDungeon().HumanoidRootPart.CFrame = Char.HumanoidRootPart.CFrame * CFrame.new(0,0,-getgenv().NpcFarmDis)
 end)  
 end
end
   

end))

--//Local Player\\

local Section4 = Tab2:CreateSection("Op Stuff")

local Button = Tab2:CreateButton({
	Name = "Equip Every Weapon In ToolBar",
	Callback = function()
	pcall(function()
   for _, tool in ipairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
    if tool:IsA("Tool") then
         tool.Parent = game:GetService("Players").LocalPlayer.Character -- I didn't use Equip because the Equip function unequips any other tools in your character.
    end
end
end)
    
    
	end,
})


local Button = Tab2:CreateButton({
	Name = "Invisible (Keybind R)",
	Callback = function()
	pcall(function()
    _G.key = Enum.KeyCode.R
    loadstring(game:HttpGet("https://paste.gg/p/anonymous/cb1c7198b269449eb8a2cf8ced061bed/files/4a98e88f82ee47388b3030a7f000b34e/raw", true))()
end)
    
    
	end,
})

local Section5 = Tab2:CreateSection("Player")

local Slider = Tab2:CreateSlider({
	Name = "WalkSpeed",
	Range = {0, 200},
	Increment = 1,
	Suffix = "WalkSpeed",
	CurrentValue = 16,
	--Flag = "WalkSpeedSlider", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	pcall(function()
	local Player = game.Players.LocalPlayer
    local Char = Player.Character
    local Humanoid = Char:WaitForChild("Humanoid")
    
		Humanoid.WalkSpeed = Value
	end)
	end,
})

local Slider = Tab2:CreateSlider({
	Name = "Jump Power",
	Range = {0, 200},
	Increment = 1,
	Suffix = "Jump Power",
	CurrentValue = 16,
	--Flag = "JumpPowerSlider", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	pcall(function()
	local Player = game.Players.LocalPlayer
    local Char = Player.Character
    local Humanoid = Char:WaitForChild("Humanoid")
    
    
		Humanoid.JumpPower = Value
	end)
	end,
})


local Section6 = Tab2:CreateSection("Others")
local Button = Tab2:CreateButton({
	Name = "Ctrl Delete",
	Callback = function()
	pcall(function()
    local Plr = game:GetService("Players").LocalPlayer
    local Mouse = Plr:GetMouse()

    Mouse.Button1Down:connect(function()
    pcall(function()
    if not game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftControl) then return end
    if not Mouse.Target then return end
    Mouse.Target:Destroy()
    end)
    end)
    end)
    
    
	end,
})

local Button = Tab2:CreateButton({
	Name = "Infinite Yield (Have Dex and Remote Spy)",
	Callback = function()
	pcall(function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)
end,
})


--//Setup Scripts\\

--//Anti Local Kick\\

local plr = game:GetService("Players").LocalPlayer

local Anti
Anti = hookmetamethod(game, "__namecall", function(self, ...)
        if self == plr and getnamecallmethod():lower() == "kick" and getgenv().Anti then
            return warn("[ANTI-KICK] Client Tried To Call Kick Function On LocalPlayer")
        end
        return Anti(self, ...)
    end)

--//Anti AFK Script\\

local VirtualUser=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
VirtualUser:CaptureController()
VirtualUser:ClickButton2(Vector2.new())
end)

	pcall(function()
	   game.Players.LocalPlayer.Backpack.Security:Destroy()
	end)



--//Etc\\
Rayfield:LoadConfiguration()
--Rayfield:Notify("Warn!","Script Loaded Enjoy!!",nil)


